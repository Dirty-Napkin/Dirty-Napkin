
/* =============
    Mixins
============= */
// autocalculate grid columns where the "gaps" are actually columns
@mixin build-grid($columnWidth, $columnCount) {
    $gapCount: $columnCount - 1;
    $totalColumnWidth: $columnWidth * $columnCount;
    $gapWidth: calc((100% - #{$totalColumnWidth}) / #{$gapCount});
    $grid-columns: ();
  
    @for $i from 1 through ($columnCount * 2 - 1) {
      @if $i % 2 == 1 {
        $grid-columns: append($grid-columns, $columnWidth);
      } @else {
        $grid-columns: append($grid-columns, $gapWidth);
      }
    }
  
    grid-template-columns: #{join($grid-columns, " ")};
  }
  
/* ---------------- Media Queries ---------------- */
// Small devices
@mixin sm {
    @media (min-width: #{$screen-sm-min}) {
        @content;
    }
}
//Usage
// @include sm{
//     grid-template-columns: 100%;
// }


// Medium devices
@mixin md {
    @media (min-width: #{$screen-md-min}) {
        @content;
    }
}
//Usage
// @include md{
//     grid-template-columns: 20% 80%;
// }


// Large devices
@mixin lg {
    @media (min-width: #{$screen-lg-min}) {
        @content;
    }
}
//Usage
// @include lg{
//     grid-template-columns: repeat(3, 1fr);
// }


// Extra large devices
@mixin xl {
    @media (min-width: #{$screen-xl-min}) {
        @content;
    }
}
//Usage
// @include xl{
//     grid-template-columns: repeat(4, 1fr);
// }

// Super Extra large devices
@mixin xxl {
    @media (min-width: #{$screen-xxl-min}) {
        @content;
    }
}